/*
 * Sample API
 * API description in Markdown.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.InlineObject;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserApi
 */
@Ignore
public class UserApiTest {

    private final UserApi api = new UserApi();

    
    /**
     * 
     *
     * busca un usuario cuyo email coincide con el pasado por parámetro
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void emailEmailGetTest() throws ApiException {
        String email = null;
        api.emailEmailGet(email);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * devuelve un único usuario
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userGetTest() throws ApiException {
        String page = null;
        String limit = null;
        api.userGet(page, limit);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Get all Employee
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userIdGetTest() throws ApiException {
        String id = null;
        api.userIdGet(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * actualiza el avatar del usuario cuya id coincide con la pasada po parámetro
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userIdPatchTest() throws ApiException {
        String id = null;
        String token = null;
        api.userIdPatch(id, token);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Borra un usuario cuya id coincide con la pasada po parámetro
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userIdPutTest() throws ApiException {
        String id = null;
        api.userIdPut(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * crea un nuevo usuario
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userPostTest() throws ApiException {
        InlineObject user = null;
        api.userPost(user);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Borra un usuario cuya id coincide con la pasada po parámetro
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void useridDeleteTest() throws ApiException {
        String id = null;
        api.useridDelete(id);

        // TODO: test validations
    }
    
}
